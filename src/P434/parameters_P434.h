//
// Parameters concerning SIDHp434
//

#ifndef SIDH_POK_PARAMETERS_P434_H
#define SIDH_POK_PARAMETERS_P434_H

#define FIELD_NAME                  "p434"
#define FIELD_BITS                  434
#define FIELD_BYTES                 ((FIELD_BITS + 7) / 8)
#define SUBGROUP_ORDER_BITS         (FIELD_BITS - (FIELD_BITS / 2))
#define FIELD_64BITS_WORDS          ((FIELD_BITS + 63) / 64)
#define SUBGROUP_ORDER_64BITS_WORDS ((SUBGROUP_ORDER_BITS + 63) / 64)
#define QUADRATIC_FIELD_BYTES       (2 * FIELD_BYTES)
#define J_INVARIANT_BYTES           QUADRATIC_FIELD_BYTES
#define MASK_FIELD_ELEMENT          0x0003FFFFFFFFFFFF
#define SECURITY_BITS               128

static const uint64_t PRIME_CHARACTERISTIC[FIELD_64BITS_WORDS] = {
        0xFFFFFFFFFFFFFFFF, 0xFFFFFFFFFFFFFFFF, 0xFFFFFFFFFFFFFFFF,
        0xFDC1767AE2FFFFFF, 0x7BC65C783158AEA3, 0x6CFC5FD681C52056,
        0x0002341F27177344
};

// Montgomery constant R² = (2ᵉ)² mod PRIME_CHARACTERISTIC where e = 0 mod 64 s.t. 2ᵉ⁻⁶⁴ < PRIME_CHARACTERISTIC < 2ᵉ
static const uint64_t MONTGOMERY_CONSTANT_R_SQUARED[FIELD_64BITS_WORDS] = {
        0x28E55B65DCD69B30, 0xACEC7367768798C2, 0xAB27973F8311688D,
        0x175CC6AF8D6C7C0B, 0xABCD92BF2DDE347E, 0x69E16A61C7686D9A,
        0x000025A89BCDD12A
};

// Neutral multiplicative in Montgomery domain: R = 2ᵉ mod PRIME_CHARACTERISTIC
static const uint64_t MONTGOMERY_CONSTANT_ONE[FIELD_64BITS_WORDS] = {
        0x000000000000742C, 0x0000000000000000, 0x0000000000000000,
        0xB90FF404FC000000, 0xD801A4FB559FACD4, 0xE93254545F77410C,
        0x0000ECEEA7BD2EDA
};

static const uint16_t TABLE_CANONICAL_BASIS[2][128] = {
        { 0x1, 0x3, 0x7, 0xA, 0xB, 0xD, 0x10, 0x11, 0x12, 0x15, 0x16, 0x17, 0x18, 0x19, 0x1B, 0x1C, 0x1E, 0x20, 0x24, 0x25, 0x27, 0x28, 0x2B, 0x32, 0x33, 0x34, 0x36, 0x37, 0x38, 0x39, 0x3A, 0x3B, 0x3C, 0x3E, 0x3F, 0x41, 0x42, 0x43, 0x48, 0x4D, 0x4F, 0x51,
     0x52, 0x54, 0x55, 0x5A, 0x5B, 0x5D, 0x5E, 0x60, 0x61, 0x62, 0x63, 0x65, 0x68, 0x69, 0x6A, 0x6B, 0x6C, 0x6E, 0x70, 0x71, 0x74, 0x76, 0x77, 0x78, 0x7B, 0x7C, 0x7E, 0x81, 0x84, 0x85, 0x89, 0x8A, 0x90, 0x93, 0x94, 0x97, 0x98, 0x99, 0x9C, 0x9E, 0xA0,
     0xA2, 0xA3, 0xA4, 0xA5, 0xA6, 0xA7, 0xA9, 0xAA, 0xAF, 0xB0, 0xB1, 0xB2, 0xB3, 0xB4, 0xB5, 0xB8, 0xBA, 0xBB, 0xBC, 0xBE, 0xBF, 0xC1, 0xC2, 0xC3, 0xC4, 0xC6, 0xC8, 0xC9, 0xCA, 0xCB, 0xCD, 0xCE, 0xCF, 0xD2, 0xD4, 0xD8, 0xD9, 0xDA, 0xDD, 0xE0, 0xE3,
     0xE4, 0xE6, 0xEB, 0xEC },
        { 0x2, 0x4, 0x5, 0x6, 0x8, 0x9, 0xC, 0xE, 0xF, 0x13, 0x14, 0x1A, 0x1D, 0x1F, 0x21, 0x22, 0x23, 0x26, 0x29, 0x2A, 0x2C, 0x2D, 0x2E, 0x2F, 0x30, 0x31, 0x35, 0x3D, 0x40, 0x44, 0x45, 0x46, 0x47, 0x49, 0x4A, 0x4B, 0x4C, 0x4E, 0x50, 0x53, 0x56, 0x57, 0x58,
     0x59, 0x5C, 0x5F, 0x64, 0x66, 0x67, 0x6D, 0x6F, 0x72, 0x73, 0x75, 0x79, 0x7A, 0x7D, 0x7F, 0x80, 0x82, 0x83, 0x86, 0x87, 0x88, 0x8B, 0x8C, 0x8D, 0x8E, 0x8F, 0x91, 0x92, 0x95, 0x96, 0x9A, 0x9B, 0x9D, 0x9F, 0xA1, 0xA8, 0xAB, 0xAC, 0xAD, 0xAE, 0xB6,
     0xB7, 0xB9, 0xBD, 0xC0, 0xC5, 0xC7, 0xCC, 0xD0, 0xD1, 0xD3, 0xD5, 0xD6, 0xD7, 0xDB, 0xDC, 0xDE, 0xDF, 0xE1, 0xE2, 0xE5, 0xE7, 0xE8, 0xE9, 0xEA, 0xEF, 0xF1, 0xF4, 0xFA, 0xFD, 0xFE, 0xFF, 0x101, 0x102, 0x103, 0x104, 0x107, 0x108, 0x10A, 0x10B, 0x10C,
     0x10E, 0x10F, 0x110, 0x112 }
};

// ++++++++++++++++++++++++++++++++++++
#define ALICE 1
#define EXPONENT_ALICE              216
#define SUBGROUP_ORDER_BITS_ALICE   216
#define SECRET_KEY_BYTES_ALICE      ((SUBGROUP_ORDER_BITS_ALICE + 7) / 8)
#define MASK_ALICE                  0xFF
#define MASK_ALICE_64BITS           (0x00FFFFFFFFFFFFFF ^ ((uint64_t)MASK_ALICE << 56))
#define STRATEGY_MAXIMUM_INTERNAL_POINTS_ALICE    7
#define NUMBER_OF_ISOGENIES_ALICE   108

// Alice's generators {XPA0 + XPA1*i, XQA0 + xQA1*i, XRA0 + XRA1*i} in GF(p^2), expressed in Montgomery representation
static const uint64_t PUBLIC_POINT_GENERATORS_ALICE[6 * FIELD_64BITS_WORDS] = {
        0x05ADF455C5C345BF, 0x91935C5CC767AC2B, 0xAFE4E879951F0257,
        0x70E792DC89FA27B1, 0xF797F526BB48C8CD, 0x2181DB6131AF621F,
        0x00000A1C08B1ECC4,  // XPA0
        0x74840EB87CDA7788, 0x2971AA0ECF9F9D0B, 0xCB5732BDF41715D5,
        0x8CD8E51F7AACFFAA, 0xA7F424730D7E419F, 0xD671EB919A179E8C,
        0x0000FFA26C5A924A, // XPA1
        0xFEC6E64588B7273B, 0xD2A626D74CBBF1C6, 0xF8F58F07A78098C7,
        0xE23941F470841B03, 0x1B63EDA2045538DD, 0x735CFEB0FFD49215,
        0x0001C4CB77542876, // XQA0
        0xADB0F733C17FFDD6, 0x6AFFBD037DA0A050, 0x680EC43DB144E02F,
        0x1E2E5D5FF524E374, 0xE2DDA115260E2995, 0xA6E4B552E2EDE508,
        0x00018ECCDDF4B53E, // XQA1
        0x01BA4DB518CD6C7D, 0x2CB0251FE3CC0611, 0x259B0C6949A9121B,
        0x60E17AC16D2F82AD, 0x3AA41F1CE175D92D, 0x413FBE6A9B9BC4F3,
        0x00022A81D8D55643, // XRA0
        0xB8ADBC70FC82E54A, 0xEF9CDDB0D5FADDED, 0x5820C734C80096A0,
        0x7799994BAA96E0E4, 0x044961599E379AF8, 0xDB2B94FBF09F27E2,
        0x0000B87FC716C0C6  // XRA1
};

static const unsigned int STRATEGY_ALICE[NUMBER_OF_ISOGENIES_ALICE - 1] = {
        48, 28, 16, 8, 4, 2, 1, 1, 2, 1, 1, 4, 2, 1,
        1, 2, 1, 1, 8, 4, 2, 1, 1, 2, 1, 1, 4,
        2, 1, 1, 2, 1, 1, 13, 7, 4, 2, 1, 1, 2,
        1, 1, 3, 2, 1, 1, 1, 1, 5, 4, 2, 1, 1,
        2, 1, 1, 2, 1, 1, 1, 21, 12, 7, 4, 2, 1,
        1, 2, 1, 1, 3, 2, 1, 1, 1, 1, 5, 3, 2,
        1, 1, 1, 1, 2, 1, 1, 1, 9, 5, 3, 2, 1,
        1, 1, 1, 2, 1, 1, 1, 4, 2, 1, 1, 1, 2,
        1, 1
};

// ++++++++++++++++++++++++++++++++++++
#define BOB 0
#define EXPONENT_BOB                137
#define SUBGROUP_ORDER_BITS_BOB     218
#define SECRET_KEY_BYTES_BOB        ((SUBGROUP_ORDER_BITS_BOB + 7) / 8)
#define MASK_BOB                    0x01
#define MASK_BOB_64BITS             (0x00FFFFFFFFFFFFFF ^ ((uint64_t)MASK_BOB << 56))
#define STRATEGY_MAXIMUM_INTERNAL_POINTS_BOB      8
#define NUMBER_OF_ISOGENIES_BOB     137

// Bob's generators {XPB0, XQB0, XRB0 + XRB1*i} in GF(p^2), expressed in Montgomery representation
static const uint64_t PUBLIC_POINT_GENERATORS_BOB[6 * FIELD_64BITS_WORDS] = {
        0x6E5497556EDD48A3, 0x2A61B501546F1C05, 0xEB919446D049887D,
        0x5864A4A69D450C4F, 0xB883F276A6490D2B, 0x22CC287022D5F5B9,
        0x0001BED4772E551F,  // XPB0
        0x0000000000000000, 0x0000000000000000, 0x0000000000000000,
        0x0000000000000000, 0x0000000000000000, 0x0000000000000000,
        0x0000000000000000, // XPB1
        0xFAE2A3F93D8B6B8E, 0x494871F51700FE1C, 0xEF1A94228413C27C,
        0x498FF4A4AF60BD62, 0xB00AD2A708267E8A, 0xF4328294E017837F,
        0x000034080181D8AE, // XQB0
        0x0000000000000000, 0x0000000000000000, 0x0000000000000000,
        0x0000000000000000, 0x0000000000000000, 0x0000000000000000,
        0x0000000000000000, // XQB1
        0x283B34FAFEFDC8E4, 0x9208F44977C3E647, 0x7DEAE962816F4E9A,
        0x68A2BA8AA262EC9D, 0x8176F112EA43F45B, 0x02106D022634F504,
        0x00007E8A50F02E37, // XRB0
        0xB378B7C1DA22CCB1, 0x6D089C99AD1D9230, 0xEBE15711813E2369,
        0x2B35A68239D48A53, 0x445F6FD138407C93, 0xBEF93B29A3F6B54B,
        0x000173FA910377D3  // XRB1
};

static const unsigned int STRATEGY_BOB[NUMBER_OF_ISOGENIES_BOB - 1] = {
        66, 33, 17, 9, 5, 3, 2, 1, 1, 1, 1, 2, 1, 1,
        1, 4, 2, 1, 1, 1, 2, 1, 1, 8, 4, 2, 1,
        1, 1, 2, 1, 1, 4, 2, 1, 1, 2, 1, 1, 16,
        8, 4, 2, 1, 1, 1, 2, 1, 1, 4, 2, 1, 1,
        2, 1, 1, 8, 4, 2, 1, 1, 2, 1, 1, 4, 2,
        1, 1, 2, 1, 1, 32, 16, 8, 4, 3, 1, 1, 1,
        1, 2, 1, 1, 4, 2, 1, 1, 2, 1, 1, 8, 4,
        2, 1, 1, 2, 1, 1, 4, 2, 1, 1, 2, 1, 1,
        16, 8, 4, 2, 1, 1, 2, 1, 1, 4, 2, 1,
        1, 2, 1, 1, 8, 4, 2, 1, 1, 2, 1, 1,
        4, 2, 1, 1, 2, 1, 1
};

static const unsigned int STRATEGY_POHLIG_HELLMAN[NUMBER_OF_ISOGENIES_BOB - 1] = {
        81, 33, 13, 5, 3, 1, 2, 1, 3, 1, 2, 1, 8, 3, 1, 2, 1, 5, 2, 1, 3, 1, 2, 1, 20, 8, 3, 1, 2, 1, 5, 2, 1, 3, 1, 2,
        1, 12, 5, 2, 1, 3, 1, 2, 1, 7, 3, 1, 2, 1, 4, 2, 1, 2, 1, 1, 48, 20, 8, 3, 1, 2, 1, 5, 2, 1, 3, 1, 2, 1, 12, 5,
        2, 1, 3, 1, 2, 1, 7, 3, 1, 2, 1, 4, 2, 1, 2, 1, 1, 28, 12, 5, 2, 1, 3, 1, 2, 1, 7, 3, 1, 2, 1, 4, 2, 1, 2, 1, 1,
        16, 7, 3, 1, 2, 1, 4, 2, 1, 2, 1, 1, 9, 4, 2, 1, 2, 1, 1, 5, 2, 1, 1, 3, 1, 2, 1
};


#endif //SIDH_POK_PARAMETERS_P434_H

